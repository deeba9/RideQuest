<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAA+dJREFUaEPtmUuoVVUch69KkmaDgga+EsImYgY+El8QQpOyzAoaRI9hRA0EUXOk
        E0UMDB8YERKFNLEg0CIEJ5ZYISk4KSgKDB9okpoVoavvt9Zvn7vvPfu6LudsbUP7g497/o/13/ucs8/Z
        69470NLS0tLS8l8RQhiHS3A1vouf4yn8GX/DS1igx8r9gupR73uotZoxzmNvHxz0AdyOZ7AuzuEenO3D
        3Do4yHjchv9gwU+4F1/DFfgQ6oneI71Ua2Ps2hxUr9Zo7Y9YcAP17k7w0nph8Bj8BIWeyIe4zOW+YdZ8
        3IF/oTiMY12uD4a+GMeHcBEXOF07zJ6FF3QgeN7p+mDosTQ7vOxUhPgJ/Aav+OfjLo1Ibg3xqygOO1UP
        DNQ1LfTNM9Fp5XWdVzHik6GWXcPju/Ey6vPyoNP9w7BdKLY7FSH+NqXDOrwL18cohK/d0gW1Ua0h1lez
        2OpUfzBoIhb3g1lOR4j/SOkwybFeSXE1NlRAbVRriBemdDiL453uHYa8EseFcMSpDuROplJ4EyfhhhiF
        cMItXVAb9RpyRe9zTvUOQ75Ks8JLTnUg9yzqOi6jeJVbuqD2jHvKVK4h93qshvCFU3loXolf4lX81LnZ
        KH7HrhsUOb3936uhxA+4yC1dqOaeMooXu6UDOd1Ar+F1nOGc7i86xyP4ZGwsUALLr9LTzr+VwrAvNhpi
        7bHexuGvbIHyqnf2T3qMuuGNRNcaQXxQRdjo+IUURrRm8F5DcDymE+fxDqsPmtjh1ojilI534U04E+/0
        T8XF3bnzLcfjnSkV/sSNmF0jiN9J6bgRHYsTsLwZPe7W2Fx8k4g4iJ9PpTCit3INLsDlqFdCJ7Q0DhgG
        ee1mVVffI6jLqVizxG1DUN519T2KD6P2YrqsCx5z7+4URga/7QiKu7aY41yxr2oSH/nc5qUwclS5CMEM
        /BgPOb4P/8amocvvXp+jPvT78X7FlVDULztN5Q2fZh6aT6Q1jeQ7n2YeLyhzAKe63IHcFNSeqZ/LUGvX
        4hSP7UBuGn6GQ3A5j/vLTHOpEup6Mr2yzmMqoT49tQ3iUh73l5nsUiXU9c70Stc7UUb11DaIS3ncX+Z9
        HPGvHNRuyROhpt3AB7GrhMt53D8c7cPmumUI5IvfKXqh8tIiPxeLDesQ3JLH/VVo87YPdbfW7yl1fdg1
        Q7M0U7N1DB2rEp9mHvc3Fp9mHvc3Fp9mHvc3Fp9mHvc3Fp9mHvc3Fp9mHvdncXtteGwWt+eh99e05Kac
        dnttMLPe49K8Ja25KZvdXhvMrPe4NOvfBxpa9Qqdxs3Y/x/NhqGZeNuP29LS0tLyf2dg4F8ScrvDb4G+
        GAAAAABJRU5ErkJggg==
</value>
  </data>
</root>